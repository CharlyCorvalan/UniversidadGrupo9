/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package universidadgrupo9.Vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadgrupo9.AccesoADatos.Conexion;
import universidadgrupo9.AccesoADatos.MateriaData;
import universidadgrupo9.Entidades.Materia;

/**
 *
 * @author charl
 */
public class FormularioDeMateria extends javax.swing.JInternalFrame {
    //Instanciamos un modelo de tabla a usar
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            
            return false;
        }
    };
    //Inicializamos los componentes del JIFrame 
    public FormularioDeMateria() {
        initComponents();

        cargarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TextoCodigo = new javax.swing.JTextField();
        BBuscarId = new javax.swing.JButton();
        TextoNombre = new javax.swing.JTextField();
        TextoA単o = new javax.swing.JTextField();
        checkbox = new java.awt.Checkbox();
        BotonEliminar = new javax.swing.JButton();
        BotonGuardar = new javax.swing.JButton();
        BotonSalir = new javax.swing.JButton();
        BotonNuevo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        ListarMaterias = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(421, 358));

        jLabel1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel1.setText("Materia");

        jLabel2.setText("Codigo");

        jLabel3.setText("Nombre");

        jLabel4.setText("A単o");

        jLabel5.setText("Estado");

        BBuscarId.setText("Buscar");
        BBuscarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuscarIdActionPerformed(evt);
            }
        });

        BotonEliminar.setText("Eliminar");
        BotonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarActionPerformed(evt);
            }
        });

        BotonGuardar.setText("Guardar");
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });

        BotonSalir.setText("Salir");
        BotonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSalirActionPerformed(evt);
            }
        });

        BotonNuevo.setText("Nuevo");
        BotonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNuevoActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        ListarMaterias.setText("Listar");
        ListarMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarMateriasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(46, 46, 46))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BotonNuevo)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BotonEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonSalir))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TextoCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(TextoNombre)
                                    .addComponent(TextoA単o)
                                    .addComponent(checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BBuscarId)
                                    .addComponent(ListarMaterias))))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BBuscarId)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextoA単o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ListarMaterias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonEliminar)
                    .addComponent(BotonGuardar)
                    .addComponent(BotonSalir)
                    .addComponent(BotonNuevo))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BBuscarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuscarIdActionPerformed
        //La accion de buscar requiere un id (entero)
        limpiarTabla();
        String cod = TextoCodigo.getText();
        int codigo = 0;
        if (cod.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe colocar el id a buscar");
        } else {
            try {
                codigo = Integer.parseInt(cod);
                Conexion.getConexion();
                MateriaData buscar = new MateriaData();
                Materia bus = new Materia();
                bus = buscar.buscarMateriaXid(codigo);
                //Verificacion de la existencia de datos en la Materia obtenida
                if (bus != null) {
                    cargarTabla(bus);
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontr坦 una materia con el ID especificado");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un numero entero");
            }

            TextoCodigo.setText("");
    }//GEN-LAST:event_BBuscarIdActionPerformed
    }
    private void BotonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarActionPerformed
        String id = TextoCodigo.getText();
        int idMateria = 0;
        if (id.equals("")) {
            idMateria = -1;
            JOptionPane.showMessageDialog(null, "Ingrese el id en campo Codigo");
        } else {
            idMateria = Integer.parseInt(id);           
            MateriaData eliminar = new MateriaData();
            eliminar.eliminarMateria(idMateria);
        }
        limpiarTabla();
        TextoCodigo.setText("");
    }//GEN-LAST:event_BotonEliminarActionPerformed

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        String nombre = TextoNombre.getText();
        String a単o = TextoA単o.getText();
        String idMateria = TextoCodigo.getText();

        int a単o1 = 0;
        int id1 = 0;
        if (nombre.equals("") || a単o.equals("") || idMateria.equals("") || checkbox.getState() == false) {
            JOptionPane.showMessageDialog(null, "Campos requeridos estan vacios");
            TextoA単o.setText("");
            TextoCodigo.setText("");
            TextoNombre.setText("");
        } else if (nombre.matches("^[a-zA-Z ]*$")) {
            try {
                a単o1 = Integer.parseInt(a単o);
                id1 = Integer.parseInt(idMateria);
                MateriaData guardar = new MateriaData();
                Materia modificar = new Materia(id1, nombre, a単o1, checkbox.getState());
                guardar.modificarMateria(modificar);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "A単o o id requiere enteros");

            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo Nombre solo acepta letras");
        }
        TextoA単o.setText("");
        TextoCodigo.setText("");
        TextoNombre.setText("");
        checkbox.setState(false);
        limpiarTabla();

    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void BotonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNuevoActionPerformed

        String nombre = TextoNombre.getText();
        String a単o = TextoA単o.getText();
        int a単o1 = 0;
        if (nombre.equals("") || a単o.equals("") || checkbox.getState() == false) {
            JOptionPane.showMessageDialog(null, "Debe llenar los campos  Nombre, A単o y Estado");
            TextoA単o.setText("");
            TextoNombre.setText("");
        } else if (nombre.matches("^[a-zA-Z ]*$")) {

            try {
                a単o1 = Integer.parseInt(TextoA単o.getText());
                //Se verifica que se ingrese un a単o de materia valido
                if (a単o1 >= 1 && a単o1 <= 6) {
                    MateriaData nuevo = new MateriaData();
                    Materia materia = new Materia(nombre, a単o1, checkbox.getState());
                    nuevo.agregarMateria(materia);
                } else {
                    JOptionPane.showMessageDialog(null, "Debe ingresar un a単o valido [1-6]");
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "A単o requiere un entero");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo nombre solo acepta letras");
        }
        TextoA単o.setText("");
        TextoNombre.setText("");
        checkbox.setState(false);
    }//GEN-LAST:event_BotonNuevoActionPerformed

    private void BotonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSalirActionPerformed
        //Se utiliza el siguiente codigo para cerrar la ventana
        dispose();
    }//GEN-LAST:event_BotonSalirActionPerformed

    private void ListarMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarMateriasActionPerformed
        //Metodo utilizado para listar todas las materias activas
        limpiarTabla();
        MateriaData listar = new MateriaData();
        ArrayList<Materia> bus = new ArrayList<>(listar.listarMAterias());
        cargarTablaLista(bus);

    }//GEN-LAST:event_ListarMateriasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBuscarId;
    private javax.swing.JButton BotonEliminar;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JButton BotonNuevo;
    private javax.swing.JButton BotonSalir;
    private javax.swing.JButton ListarMaterias;
    private javax.swing.JTextField TextoA単o;
    private javax.swing.JTextField TextoCodigo;
    private javax.swing.JTextField TextoNombre;
    private java.awt.Checkbox checkbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
//Metodo usado para darle forma a la cabecera de la tabla
    public void cargarCabecera() {
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("A単o");
        modelo.addColumn("Estado");
        tabla.setModel(modelo);
    }
    //Metodo utilizado para cargar la tabla desde Bopton Buscar, el cual retorna una sola materia
    //obtenida a travez del id de materia
    public void cargarTabla(Materia mat) {
        modelo.addRow(new Object[]{mat.getIdMateria(), mat.getNombre(), mat.getA単oMateria(), mat.isActivo()});
    }
    //Metodo utilizado para cargar tabla desde Boton listar, el mismo trae un arreglo de materias
    public void cargarTablaLista(ArrayList<Materia> list) {

        for (Materia elem : list) {
            modelo.addRow(new Object[]{elem.getIdMateria(), elem.getNombre(), elem.getA単oMateria(), elem.isActivo()});
        }

    }
    //Remueve las filas de la tabla
    private void limpiarTabla() {
        int fila = modelo.getRowCount();
        for (int i = fila - 1; i > -1; i--) {
            modelo.removeRow(i);
        }
    }
}
